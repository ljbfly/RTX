Component: ARM Compiler 5.06 update 6 (build 750) Tool: armlink [4d35ed]

==============================================================================

Section Cross References

    blinky.o(.text) refers to printf1.o(i.__0printf$1) for __2printf
    blinky.o(.text) refers to rtx_thread.o(.text) for osThreadFlagsSet
    blinky.o(.text) refers to rtx_delay.o(.text) for osDelay
    blinky.o(.text) refers to system_armcm3.o(.text) for SystemCoreClockUpdate
    blinky.o(.text) refers to rtx_kernel.o(.text) for osKernelInitialize
    blinky.o(.text) refers to blinky.o(.data) for tid_clock
    blinky.o(.text) refers to blinky.o(.bss) for g_phases
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_idle_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.stack) for os_idle_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.cb) for os_timer_mq_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.mem) for os_timer_mq_data
    rtx_lib.o(.data) refers to irq_cm3.o(.constdata) for irqRtxLib
    rtx_lib.o(.data.os.thread.mpi) refers to rtx_lib.o(.bss.os.thread.cb) for os_thread_cb
    rtx_lib.o(.data.os.thread.mpi) refers to rtx_lib.o(.bss.os.thread.stack) for os_thread_def_stack
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_isr_queue
    rtx_lib.o(.rodata) refers to rtx_lib.o(.data.os.thread.mpi) for os_mpi_def_stack
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_idle_thread_attr
    irq_cm3.o(.text) refers to rtx_system.o(.text) for osRtxPendSV_Handler
    irq_cm3.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_cm3.o(.text) refers to rtx_lib.o(.constdata) for osRtxUserSVC
    rtx_delay.o(.text) refers to rtx_thread.o(.text) for osRtxThreadWaitEnter
    rtx_delay.o(.text) refers to rtx_evr.o(.text) for EvrRtxThreadDelayCompleted
    rtx_delay.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text) refers to rtx_evflags.o(.emb_text) for __asm___13_rtx_evflags_c_e167c757__atomic_set32
    rtx_evflags.o(.text) refers to rtx_thread.o(.text) for osRtxThreadListRemove
    rtx_evflags.o(.text) refers to rtx_evr.o(.text) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text) refers to rtx_mempool.o(.text) for osRtxMemoryPoolAlloc
    rtx_evflags.o(.text) refers to rtx_memory.o(.text) for osRtxMemoryAlloc
    rtx_evflags.o(.text) refers to rtx_system.o(.text) for osRtxPostProcess
    rtx_evflags.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evr.o(.text) refers to eventrecorder.o(.text) for EventRecord4
    rtx_kernel.o(.text) refers to os_systick.o(.text) for OS_Tick_Disable
    rtx_kernel.o(.text) refers to rtx_evr.o(.text) for EvrRtxKernelInitialized
    rtx_kernel.o(.text) refers to memseta.o(.text) for __aeabi_memclr4
    rtx_kernel.o(.text) refers to rtx_memory.o(.text) for osRtxMemoryInit
    rtx_kernel.o(.text) refers to rtx_mempool.o(.text) for osRtxMemoryPoolInit
    rtx_kernel.o(.text) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text) refers to rtx_thread.o(.text) for osRtxThreadStartup
    rtx_kernel.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text) refers to irq_cm3.o(.text) for SysTick_Handler
    rtx_kernel.o(.text) refers to rtx_lib.o(.text) for osRtxKernelPreInit
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.conststrlit) for .conststrlit
    rtx_memory.o(.text) refers to rtx_evr.o(.text) for EvrRtxMemoryInit
    rtx_mempool.o(.text) refers to rtx_evr.o(.text) for EvrRtxMemoryBlockInit
    rtx_mempool.o(.text) refers to rtx_mempool.o(.emb_text) for __asm___13_rtx_mempool_c_7914b4c7__atomic_link_get
    rtx_mempool.o(.text) refers to rtx_thread.o(.text) for osRtxThreadListGet
    rtx_mempool.o(.text) refers to rtx_memory.o(.text) for osRtxMemoryAlloc
    rtx_mempool.o(.text) refers to memseta.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text) refers to rtx_system.o(.text) for osRtxPostProcess
    rtx_msgqueue.o(.text) refers to rtx_msgqueue.o(.emb_text) for __asm___14_rtx_msgqueue_c_ba128ae8__atomic_inc32
    rtx_msgqueue.o(.text) refers to rtx_mempool.o(.text) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text) refers to rtx_thread.o(.text) for osRtxThreadListGet
    rtx_msgqueue.o(.text) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text) refers to rtx_evr.o(.text) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text) refers to rtx_memory.o(.text) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text) refers to memseta.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text) refers to rtx_system.o(.text) for osRtxPostProcess
    rtx_mutex.o(.text) refers to rtx_evr.o(.text) for EvrRtxMutexReleased
    rtx_mutex.o(.text) refers to rtx_thread.o(.text) for osRtxThreadListGet
    rtx_mutex.o(.text) refers to rtx_mempool.o(.text) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text) refers to rtx_memory.o(.text) for osRtxMemoryAlloc
    rtx_mutex.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text) refers to rtx_semaphore.o(.emb_text) for __asm___15_rtx_semaphore_c_c705bb47__atomic_dec16_nz
    rtx_semaphore.o(.text) refers to rtx_thread.o(.text) for osRtxThreadListGet
    rtx_semaphore.o(.text) refers to rtx_evr.o(.text) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text) refers to rtx_mempool.o(.text) for osRtxMemoryPoolAlloc
    rtx_semaphore.o(.text) refers to rtx_memory.o(.text) for osRtxMemoryAlloc
    rtx_semaphore.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text) refers to rtx_system.o(.text) for osRtxPostProcess
    rtx_system.o(.text) refers to rtx_system.o(.emb_text) for __asm___12_rtx_system_c_024f2f18__atomic_inc16_lt
    rtx_system.o(.text) refers to os_systick.o(.text) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text) refers to rtx_thread.o(.text) for osRtxThreadDelayTick
    rtx_system.o(.text) refers to rtx_evr.o(.text) for EvrRtxThreadPreempted
    rtx_system.o(.text) refers to rtx_config.o(.text) for osRtxErrorNotify
    rtx_system.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text) refers to rtx_thread.o(.emb_text) for __asm___12_rtx_thread_c_add96be5__atomic_set32
    rtx_thread.o(.text) refers to rtx_evr.o(.text) for EvrRtxThreadDelayCompleted
    rtx_thread.o(.text) refers to rtx_config.o(.text) for osRtxErrorNotify
    rtx_thread.o(.text) refers to rtx_mempool.o(.text) for osRtxMemoryPoolFree
    rtx_thread.o(.text) refers to rtx_memory.o(.text) for osRtxMemoryFree
    rtx_thread.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text) refers to rtx_mutex.o(.text) for osRtxMutexOwnerRelease
    rtx_thread.o(.text) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text) refers to rtx_timer.o(.text) for osRtxTimerThread
    rtx_thread.o(.text) refers to rtx_system.o(.text) for osRtxPostProcess
    rtx_timer.o(.text) refers to rtx_msgqueue.o(.text) for osMessageQueuePut
    rtx_timer.o(.text) refers to rtx_config.o(.text) for osRtxErrorNotify
    rtx_timer.o(.text) refers to rtx_evr.o(.text) for EvrRtxTimerCallback
    rtx_timer.o(.text) refers to rtx_mempool.o(.text) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text) refers to rtx_memory.o(.text) for osRtxMemoryAlloc
    rtx_timer.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text) refers to rtx_lib.o(.rodata) for osRtxConfig
    os_systick.o(.text) refers to system_armcm3.o(.data) for SystemCoreClock
    os_systick.o(.text) refers to os_systick.o(.data) for PendST
    retarget_io.o(.text) refers to fputs.o(i.fputs) for fputs
    retarget_io.o(.text) refers to retarget_io.o(.data) for ITM_RxBuffer
    retarget_io.o(.text) refers to stdout.o(.data) for __stdout
    retarget_io.o(.text) refers to stderr.o(.data) for __stderr
    eventrecorder.o(.text) refers to eventrecorder.o(.emb_text) for __asm___15_EventRecorder_c_e8d3082c__atomic_inc32
    eventrecorder.o(.text) refers to memseta.o(.text) for __aeabi_memclr4
    eventrecorder.o(.text) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text) refers to system_armcm3.o(.data) for SystemCoreClock
    eventrecorder.o(.text) refers to eventrecorder.o(.constdata) for EventRecorderInfo
    eventrecorder.o(.text) refers to memcpya.o(.text) for __aeabi_memcpy
    eventrecorder.o(.constdata) refers to eventrecorder.o(.bss.noinit) for EventBuffer
    startup_armcm3.o(RESET) refers to startup_armcm3.o(STACK) for __initial_sp
    startup_armcm3.o(RESET) refers to startup_armcm3.o(.text) for Reset_Handler
    startup_armcm3.o(RESET) refers to irq_cm3.o(.text) for SVC_Handler
    startup_armcm3.o(.text) refers to system_armcm3.o(.text) for SystemInit
    startup_armcm3.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    system_armcm3.o(.text) refers to system_armcm3.o(.data) for SystemCoreClock
    system_armcm3.o(.text) refers to startup_armcm3.o(RESET) for __Vectors
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    fputs.o(i.fputs) refers to retarget_io.o(.text) for fputc
    fputs_e.o(.text) refers to retarget_io.o(.text) for fputc
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to retarget_io.o(.text) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to retarget_io.o(.text) for fputc
    printfb.o(i.__0printf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to retarget_io.o(.text) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to retarget_io.o(.text) for fputc
    printfb.o(i.__0vprintf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to retarget_io.o(.text) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to retarget_io.o(.text) for fputc
    printf0.o(i.__0printf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to retarget_io.o(.text) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to retarget_io.o(.text) for fputc
    printf0.o(i.__0vprintf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to retarget_io.o(.text) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to retarget_io.o(.text) for fputc
    printf1.o(i.__0printf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to retarget_io.o(.text) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to retarget_io.o(.text) for fputc
    printf1.o(i.__0vprintf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to retarget_io.o(.text) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to retarget_io.o(.text) for fputc
    printf2.o(i.__0printf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to retarget_io.o(.text) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to retarget_io.o(.text) for fputc
    printf2.o(i.__0vprintf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to retarget_io.o(.text) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to retarget_io.o(.text) for fputc
    printf3.o(i.__0printf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to retarget_io.o(.text) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to retarget_io.o(.text) for fputc
    printf3.o(i.__0vprintf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to retarget_io.o(.text) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to retarget_io.o(.text) for fputc
    printf4.o(i.__0printf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to retarget_io.o(.text) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to retarget_io.o(.text) for fputc
    printf4.o(i.__0vprintf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to retarget_io.o(.text) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to retarget_io.o(.text) for fputc
    printf5.o(i.__0printf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to retarget_io.o(.text) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to retarget_io.o(.text) for fputc
    printf5.o(i.__0vprintf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to retarget_io.o(.text) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to retarget_io.o(.text) for fputc
    printf6.o(i.__0printf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to retarget_io.o(.text) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to retarget_io.o(.text) for fputc
    printf6.o(i.__0vprintf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to retarget_io.o(.text) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to retarget_io.o(.text) for fputc
    printf7.o(i.__0printf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to retarget_io.o(.text) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to retarget_io.o(.text) for fputc
    printf7.o(i.__0vprintf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to retarget_io.o(.text) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to retarget_io.o(.text) for fputc
    printf8.o(i.__0printf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to retarget_io.o(.text) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to retarget_io.o(.text) for fputc
    printf8.o(i.__0vprintf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to retarget_io.o(.text) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to retarget_io.o(.text) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to retarget_io.o(.text) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to retarget_io.o(.text) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_armcm3.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_armcm3.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to blinky.o(.text) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to blinky.o(.text) for main
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr


==============================================================================

Removing Unused input sections from the image.

    Removing blinky.o(.rev16_text), (4 bytes).
    Removing blinky.o(.revsh_text), (4 bytes).
    Removing blinky.o(.rrx_text), (6 bytes).
    Removing rtx_lib.o(.rev16_text), (4 bytes).
    Removing rtx_lib.o(.revsh_text), (4 bytes).
    Removing rtx_lib.o(.rrx_text), (6 bytes).
    Removing rtx_lib.o(.emb_text), (0 bytes).
    Removing rtx_lib.o(.rodata), (56 bytes).
    Removing rtx_lib.o(.data), (4 bytes).
    Removing irq_cm3.o(.constdata), (1 bytes).
    Removing rtx_delay.o(.rev16_text), (4 bytes).
    Removing rtx_delay.o(.revsh_text), (4 bytes).
    Removing rtx_delay.o(.rrx_text), (6 bytes).
    Removing rtx_delay.o(.emb_text), (328 bytes).
    Removing rtx_evflags.o(.rev16_text), (4 bytes).
    Removing rtx_evflags.o(.revsh_text), (4 bytes).
    Removing rtx_evflags.o(.rrx_text), (6 bytes).
    Removing rtx_evflags.o(.emb_text), (328 bytes).
    Removing rtx_evflags.o(.text), (1620 bytes).
    Removing rtx_evr.o(.rev16_text), (4 bytes).
    Removing rtx_evr.o(.revsh_text), (4 bytes).
    Removing rtx_evr.o(.rrx_text), (6 bytes).
    Removing rtx_kernel.o(.rev16_text), (4 bytes).
    Removing rtx_kernel.o(.revsh_text), (4 bytes).
    Removing rtx_kernel.o(.rrx_text), (6 bytes).
    Removing rtx_kernel.o(.emb_text), (328 bytes).
    Removing rtx_memory.o(.rev16_text), (4 bytes).
    Removing rtx_memory.o(.revsh_text), (4 bytes).
    Removing rtx_memory.o(.rrx_text), (6 bytes).
    Removing rtx_memory.o(.emb_text), (328 bytes).
    Removing rtx_mempool.o(.rev16_text), (4 bytes).
    Removing rtx_mempool.o(.revsh_text), (4 bytes).
    Removing rtx_mempool.o(.rrx_text), (6 bytes).
    Removing rtx_msgqueue.o(.rev16_text), (4 bytes).
    Removing rtx_msgqueue.o(.revsh_text), (4 bytes).
    Removing rtx_msgqueue.o(.rrx_text), (6 bytes).
    Removing rtx_mutex.o(.rev16_text), (4 bytes).
    Removing rtx_mutex.o(.revsh_text), (4 bytes).
    Removing rtx_mutex.o(.rrx_text), (6 bytes).
    Removing rtx_mutex.o(.emb_text), (328 bytes).
    Removing rtx_semaphore.o(.rev16_text), (4 bytes).
    Removing rtx_semaphore.o(.revsh_text), (4 bytes).
    Removing rtx_semaphore.o(.rrx_text), (6 bytes).
    Removing rtx_semaphore.o(.emb_text), (328 bytes).
    Removing rtx_semaphore.o(.text), (1330 bytes).
    Removing rtx_system.o(.rev16_text), (4 bytes).
    Removing rtx_system.o(.revsh_text), (4 bytes).
    Removing rtx_system.o(.rrx_text), (6 bytes).
    Removing rtx_thread.o(.rev16_text), (4 bytes).
    Removing rtx_thread.o(.revsh_text), (4 bytes).
    Removing rtx_thread.o(.rrx_text), (6 bytes).
    Removing rtx_timer.o(.rev16_text), (4 bytes).
    Removing rtx_timer.o(.revsh_text), (4 bytes).
    Removing rtx_timer.o(.rrx_text), (6 bytes).
    Removing rtx_timer.o(.emb_text), (328 bytes).
    Removing os_systick.o(.rev16_text), (4 bytes).
    Removing os_systick.o(.revsh_text), (4 bytes).
    Removing os_systick.o(.rrx_text), (6 bytes).
    Removing rtx_config.o(.rev16_text), (4 bytes).
    Removing rtx_config.o(.revsh_text), (4 bytes).
    Removing rtx_config.o(.rrx_text), (6 bytes).
    Removing eventrecorder.o(.rev16_text), (4 bytes).
    Removing eventrecorder.o(.revsh_text), (4 bytes).
    Removing eventrecorder.o(.rrx_text), (6 bytes).
    Removing startup_armcm3.o(HEAP), (3072 bytes).
    Removing system_armcm3.o(.rev16_text), (4 bytes).
    Removing system_armcm3.o(.revsh_text), (4 bytes).
    Removing system_armcm3.o(.rrx_text), (6 bytes).
    Removing dadd.o(.text), (334 bytes).
    Removing dmul.o(.text), (228 bytes).
    Removing ddiv.o(.text), (222 bytes).
    Removing dfixul.o(.text), (48 bytes).
    Removing cdrcmple.o(.text), (48 bytes).
    Removing depilogue.o(.text), (186 bytes).

74 unused section(s) (total 9697 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      960  startup_armcm3.o(RESET)
    ../clib/../cmprslib/zerorunl.c           0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/stubs.s          0x00000000   Number         0  stubs.o ABSOLUTE
    ../clib/microlib/stdio/fputs.c           0x00000000   Number         0  fputs.o ABSOLUTE
    ../clib/microlib/stdio/fputs.c           0x00000000   Number         0  fputs_e.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stderr.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    Blinky.c                                 0x00000000   Number         0  blinky.o ABSOLUTE
    Blinky.c                                 0x00000000   Number         0  blinky.o ABSOLUTE
    E:\Keil_v5\ARM\PACK\Keil\ARM_Compiler\1.5.0\Source\EventRecorder.c 0x00000000   Number         0  eventrecorder.o ABSOLUTE
    E:\Keil_v5\ARM\PACK\Keil\ARM_Compiler\1.5.0\Source\retarget_io.c 0x00000000   Number         0  retarget_io.o ABSOLUTE
    E:\\Keil_v5\\ARM\\PACK\\Keil\\ARM_Compiler\\1.5.0\\Source\\EventRecorder.c 0x00000000   Number         0  eventrecorder.o ABSOLUTE
    RTE\Device\ARMCM3\startup_ARMCM3.s       0x00000000   Number         0  startup_armcm3.o ABSOLUTE
    RTE\Device\ARMCM3\system_ARMCM3.c        0x00000000   Number         0  system_armcm3.o ABSOLUTE
    RTE\\Device\\ARMCM3\\system_ARMCM3.c     0x00000000   Number         0  system_armcm3.o ABSOLUTE
    RTX\Config\RTX_Config.c                  0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTX\Source\ARM\irq_cm3.s                 0x00000000   Number         0  irq_cm3.o ABSOLUTE
    RTX\Source\rtx_delay.c                   0x00000000   Number         0  rtx_delay.o ABSOLUTE
    RTX\Source\rtx_evflags.c                 0x00000000   Number         0  rtx_evflags.o ABSOLUTE
    RTX\Source\rtx_evr.c                     0x00000000   Number         0  rtx_evr.o ABSOLUTE
    RTX\Source\rtx_kernel.c                  0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    RTX\Source\rtx_lib.c                     0x00000000   Number         0  rtx_lib.o ABSOLUTE
    RTX\Source\rtx_memory.c                  0x00000000   Number         0  rtx_memory.o ABSOLUTE
    RTX\Source\rtx_mempool.c                 0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    RTX\Source\rtx_msgqueue.c                0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    RTX\Source\rtx_mutex.c                   0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    RTX\Source\rtx_semaphore.c               0x00000000   Number         0  rtx_semaphore.o ABSOLUTE
    RTX\Source\rtx_system.c                  0x00000000   Number         0  rtx_system.o ABSOLUTE
    RTX\Source\rtx_thread.c                  0x00000000   Number         0  rtx_thread.o ABSOLUTE
    RTX\Source\rtx_timer.c                   0x00000000   Number         0  rtx_timer.o ABSOLUTE
    RTX\\Config\\RTX_Config.c                0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTX\\Source\\rtx_delay.c                 0x00000000   Number         0  rtx_delay.o ABSOLUTE
    RTX\\Source\\rtx_evflags.c               0x00000000   Number         0  rtx_evflags.o ABSOLUTE
    RTX\\Source\\rtx_evr.c                   0x00000000   Number         0  rtx_evr.o ABSOLUTE
    RTX\\Source\\rtx_kernel.c                0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    RTX\\Source\\rtx_lib.c                   0x00000000   Number         0  rtx_lib.o ABSOLUTE
    RTX\\Source\\rtx_memory.c                0x00000000   Number         0  rtx_memory.o ABSOLUTE
    RTX\\Source\\rtx_mempool.c               0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    RTX\\Source\\rtx_msgqueue.c              0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    RTX\\Source\\rtx_mutex.c                 0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    RTX\\Source\\rtx_semaphore.c             0x00000000   Number         0  rtx_semaphore.o ABSOLUTE
    RTX\\Source\\rtx_system.c                0x00000000   Number         0  rtx_system.o ABSOLUTE
    RTX\\Source\\rtx_thread.c                0x00000000   Number         0  rtx_thread.o ABSOLUTE
    RTX\\Source\\rtx_timer.c                 0x00000000   Number         0  rtx_timer.o ABSOLUTE
    Source\\os_systick.c                     0x00000000   Number         0  os_systick.o ABSOLUTE
    Source\os_systick.c                      0x00000000   Number         0  os_systick.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    .ARM.Collect$$$$00000000                 0x000003c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x000003c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x000003c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x000003c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x000003c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x000003c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    .ARM.Collect$$$$0000000D                 0x000003d0   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x000003d0   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x000003d0   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    __lit__00000000                          0x000003d0   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .emb_text                                0x000003d4   Section      328  rtx_mempool.o(.emb_text)
    .emb_text                                0x0000051c   Section      328  rtx_msgqueue.o(.emb_text)
    .emb_text                                0x00000664   Section      328  rtx_system.o(.emb_text)
    .emb_text                                0x000007ac   Section      328  rtx_thread.o(.emb_text)
    .emb_text                                0x000008f4   Section      116  eventrecorder.o(.emb_text)
    .text                                    0x00000968   Section        0  blinky.o(.text)
    .text                                    0x00000b2c   Section        0  rtx_lib.o(.text)
    .text                                    0x00000b30   Section      148  irq_cm3.o(.text)
    .text                                    0x00000bc4   Section        0  rtx_delay.o(.text)
    IsIrqMasked                              0x00000bc5   Thumb Code    24  rtx_delay.o(.text)
    svcRtxDelay                              0x00000bdd   Thumb Code    24  rtx_delay.o(.text)
    svcRtxDelayUntil                         0x00000bf5   Thumb Code    52  rtx_delay.o(.text)
    IsIrqMode                                0x00000c99   Thumb Code    16  rtx_delay.o(.text)
    .text                                    0x00000cb4   Section        0  rtx_evr.o(.text)
    .text                                    0x00001a7c   Section        0  rtx_kernel.o(.text)
    IsIrqMasked                              0x00001a7d   Thumb Code    24  rtx_kernel.o(.text)
    KernelBlock                              0x00001a95   Thumb Code    60  rtx_kernel.o(.text)
    KernelUnblock                            0x00001ad1   Thumb Code    52  rtx_kernel.o(.text)
    svcRtxKernelInitialize                   0x00001b05   Thumb Code   602  rtx_kernel.o(.text)
    svcRtxKernelGetInfo                      0x00001d5f   Thumb Code    58  rtx_kernel.o(.text)
    svcRtxKernelGetState                     0x00001d99   Thumb Code    20  rtx_kernel.o(.text)
    svcRtxKernelStart                        0x00001dad   Thumb Code   256  rtx_kernel.o(.text)
    svcRtxKernelLock                         0x00001ead   Thumb Code    62  rtx_kernel.o(.text)
    svcRtxKernelUnlock                       0x00001eeb   Thumb Code    62  rtx_kernel.o(.text)
    svcRtxKernelRestoreLock                  0x00001f29   Thumb Code    98  rtx_kernel.o(.text)
    svcRtxKernelSuspend                      0x00001f8b   Thumb Code    68  rtx_kernel.o(.text)
    svcRtxKernelResume                       0x00001fcf   Thumb Code   190  rtx_kernel.o(.text)
    svcRtxKernelGetTickCount                 0x0000208d   Thumb Code    16  rtx_kernel.o(.text)
    svcRtxKernelGetTickFreq                  0x0000209d   Thumb Code    16  rtx_kernel.o(.text)
    svcRtxKernelGetSysTimerCount             0x000020ad   Thumb Code    44  rtx_kernel.o(.text)
    svcRtxKernelGetSysTimerFreq              0x000020d9   Thumb Code    18  rtx_kernel.o(.text)
    IsPrivileged                             0x0000237d   Thumb Code    16  rtx_kernel.o(.text)
    IsIrqMode                                0x0000238d   Thumb Code    16  rtx_kernel.o(.text)
    .text                                    0x000023b0   Section        0  rtx_memory.o(.text)
    MemBlockPtr                              0x00002585   Thumb Code    10  rtx_memory.o(.text)
    .text                                    0x00002590   Section        0  rtx_mempool.o(.text)
    IsIrqMasked                              0x00002591   Thumb Code    24  rtx_mempool.o(.text)
    osRtxMemoryPoolPostProcess               0x00002675   Thumb Code    58  rtx_mempool.o(.text)
    svcRtxMemoryPoolNew                      0x000026af   Thumb Code   384  rtx_mempool.o(.text)
    svcRtxMemoryPoolGetName                  0x0000282f   Thumb Code    42  rtx_mempool.o(.text)
    svcRtxMemoryPoolAlloc                    0x00002859   Thumb Code   120  rtx_mempool.o(.text)
    svcRtxMemoryPoolFree                     0x000028d1   Thumb Code   124  rtx_mempool.o(.text)
    svcRtxMemoryPoolGetCapacity              0x0000294d   Thumb Code    42  rtx_mempool.o(.text)
    svcRtxMemoryPoolGetBlockSize             0x00002977   Thumb Code    42  rtx_mempool.o(.text)
    svcRtxMemoryPoolGetCount                 0x000029a1   Thumb Code    42  rtx_mempool.o(.text)
    svcRtxMemoryPoolGetSpace                 0x000029cb   Thumb Code    50  rtx_mempool.o(.text)
    svcRtxMemoryPoolDelete                   0x000029fd   Thumb Code   152  rtx_mempool.o(.text)
    IsIrqMode                                0x00002cbb   Thumb Code    16  rtx_mempool.o(.text)
    isrRtxMemoryPoolFree                     0x00002ccb   Thumb Code    88  rtx_mempool.o(.text)
    .text                                    0x00002d40   Section        0  rtx_msgqueue.o(.text)
    IsIrqMasked                              0x00002d41   Thumb Code    24  rtx_msgqueue.o(.text)
    MessageQueuePut                          0x00002d59   Thumb Code    76  rtx_msgqueue.o(.text)
    MessageQueueGet                          0x00002da5   Thumb Code    52  rtx_msgqueue.o(.text)
    MessageQueueRemove                       0x00002dd9   Thumb Code    34  rtx_msgqueue.o(.text)
    osRtxMessageQueuePostProcess             0x00002dfb   Thumb Code   272  rtx_msgqueue.o(.text)
    svcRtxMessageQueueNew                    0x00002f0b   Thumb Code   396  rtx_msgqueue.o(.text)
    svcRtxMessageQueueGetName                0x00003097   Thumb Code    42  rtx_msgqueue.o(.text)
    svcRtxMessageQueuePut                    0x000030c1   Thumb Code   292  rtx_msgqueue.o(.text)
    svcRtxMessageQueueGet                    0x000031e5   Thumb Code   316  rtx_msgqueue.o(.text)
    svcRtxMessageQueueGetCapacity            0x00003321   Thumb Code    42  rtx_msgqueue.o(.text)
    svcRtxMessageQueueGetMsgSize             0x0000334b   Thumb Code    42  rtx_msgqueue.o(.text)
    svcRtxMessageQueueGetCount               0x00003375   Thumb Code    42  rtx_msgqueue.o(.text)
    svcRtxMessageQueueGetSpace               0x0000339f   Thumb Code    58  rtx_msgqueue.o(.text)
    svcRtxMessageQueueReset                  0x000033d9   Thumb Code   214  rtx_msgqueue.o(.text)
    svcRtxMessageQueueDelete                 0x000034af   Thumb Code   152  rtx_msgqueue.o(.text)
    IsIrqMode                                0x00003777   Thumb Code    16  rtx_msgqueue.o(.text)
    isrRtxMessageQueuePut                    0x00003787   Thumb Code   134  rtx_msgqueue.o(.text)
    isrRtxMessageQueueGet                    0x0000380d   Thumb Code   130  rtx_msgqueue.o(.text)
    .text                                    0x000038bc   Section        0  rtx_mutex.o(.text)
    IsIrqMasked                              0x000038bd   Thumb Code    24  rtx_mutex.o(.text)
    svcRtxMutexNew                           0x00003933   Thumb Code   168  rtx_mutex.o(.text)
    svcRtxMutexGetName                       0x000039db   Thumb Code    42  rtx_mutex.o(.text)
    svcRtxMutexAcquire                       0x00003a05   Thumb Code   264  rtx_mutex.o(.text)
    svcRtxMutexRelease                       0x00003b0d   Thumb Code   260  rtx_mutex.o(.text)
    svcRtxMutexGetOwner                      0x00003c11   Thumb Code    58  rtx_mutex.o(.text)
    svcRtxMutexDelete                        0x00003c4b   Thumb Code   230  rtx_mutex.o(.text)
    IsIrqMode                                0x00003e7b   Thumb Code    16  rtx_mutex.o(.text)
    .text                                    0x00003ea0   Section        0  rtx_system.o(.text)
    isr_queue_put                            0x00003ea1   Thumb Code    56  rtx_system.o(.text)
    isr_queue_get                            0x00003ed9   Thumb Code    46  rtx_system.o(.text)
    .text                                    0x00004058   Section        0  rtx_thread.o(.text)
    IsIrqMasked                              0x00004059   Thumb Code    24  rtx_thread.o(.text)
    ThreadFlagsSet                           0x00004071   Thumb Code    22  rtx_thread.o(.text)
    ThreadFlagsClear                         0x00004087   Thumb Code    22  rtx_thread.o(.text)
    ThreadFlagsCheck                         0x0000409d   Thumb Code    86  rtx_thread.o(.text)
    osRtxThreadListRoot                      0x00004141   Thumb Code    18  rtx_thread.o(.text)
    osRtxThreadListUnlink                    0x00004197   Thumb Code    32  rtx_thread.o(.text)
    osRtxThreadDelayInsert                   0x000041c9   Thumb Code   106  rtx_thread.o(.text)
    osRtxThreadDelayRemove                   0x00004233   Thumb Code   118  rtx_thread.o(.text)
    osRtxThreadBlock                         0x00004393   Thumb Code    58  rtx_thread.o(.text)
    osRtxThreadPostProcess                   0x000044fd   Thumb Code    50  rtx_thread.o(.text)
    osRtxThreadFree                          0x0000452f   Thumb Code   104  rtx_thread.o(.text)
    svcRtxThreadExit                         0x00004597   Thumb Code   152  rtx_thread.o(.text)
    svcRtxThreadNew                          0x0000464b   Thumb Code   612  rtx_thread.o(.text)
    svcRtxThreadGetName                      0x000048af   Thumb Code    42  rtx_thread.o(.text)
    svcRtxThreadGetId                        0x000048d9   Thumb Code    18  rtx_thread.o(.text)
    svcRtxThreadGetState                     0x000048eb   Thumb Code    58  rtx_thread.o(.text)
    svcRtxThreadGetStackSize                 0x00004925   Thumb Code    42  rtx_thread.o(.text)
    svcRtxThreadGetStackSpace                0x0000494f   Thumb Code   124  rtx_thread.o(.text)
    svcRtxThreadSetPriority                  0x000049cb   Thumb Code   102  rtx_thread.o(.text)
    svcRtxThreadGetPriority                  0x00004a31   Thumb Code    74  rtx_thread.o(.text)
    svcRtxThreadYield                        0x00004a7b   Thumb Code    66  rtx_thread.o(.text)
    svcRtxThreadSuspend                      0x00004abd   Thumb Code   190  rtx_thread.o(.text)
    svcRtxThreadResume                       0x00004b7b   Thumb Code    88  rtx_thread.o(.text)
    svcRtxThreadDetach                       0x00004bd3   Thumb Code   100  rtx_thread.o(.text)
    svcRtxThreadJoin                         0x00004c37   Thumb Code   154  rtx_thread.o(.text)
    svcRtxThreadTerminate                    0x00004cd1   Thumb Code   272  rtx_thread.o(.text)
    svcRtxThreadGetCount                     0x00004de1   Thumb Code    56  rtx_thread.o(.text)
    svcRtxThreadEnumerate                    0x00004e19   Thumb Code   118  rtx_thread.o(.text)
    svcRtxThreadFlagsSet                     0x00004e8f   Thumb Code   152  rtx_thread.o(.text)
    svcRtxThreadFlagsClear                   0x00004f27   Thumb Code    70  rtx_thread.o(.text)
    svcRtxThreadFlagsGet                     0x00004f6d   Thumb Code    30  rtx_thread.o(.text)
    svcRtxThreadFlagsWait                    0x00004f8b   Thumb Code   142  rtx_thread.o(.text)
    IsIrqMode                                0x000054dd   Thumb Code    16  rtx_thread.o(.text)
    osRtxKernelGetState                      0x000054ed   Thumb Code     6  rtx_thread.o(.text)
    osRtxThreadGetRunning                    0x000054f3   Thumb Code     6  rtx_thread.o(.text)
    osRtxThreadSetRunning                    0x000054f9   Thumb Code     6  rtx_thread.o(.text)
    isrRtxThreadFlagsSet                     0x000054ff   Thumb Code   100  rtx_thread.o(.text)
    .text                                    0x00005574   Section        0  rtx_timer.o(.text)
    IsIrqMasked                              0x00005575   Thumb Code    24  rtx_timer.o(.text)
    TimerInsert                              0x0000558d   Thumb Code    58  rtx_timer.o(.text)
    TimerRemove                              0x000055c7   Thumb Code    42  rtx_timer.o(.text)
    TimerUnlink                              0x000055f1   Thumb Code    18  rtx_timer.o(.text)
    osRtxTimerTick                           0x00005603   Thumb Code    88  rtx_timer.o(.text)
    svcRtxTimerNew                           0x000056a7   Thumb Code   206  rtx_timer.o(.text)
    svcRtxTimerGetName                       0x00005775   Thumb Code    42  rtx_timer.o(.text)
    svcRtxTimerStart                         0x0000579f   Thumb Code    98  rtx_timer.o(.text)
    svcRtxTimerStop                          0x00005801   Thumb Code    76  rtx_timer.o(.text)
    svcRtxTimerIsRunning                     0x0000584d   Thumb Code    62  rtx_timer.o(.text)
    svcRtxTimerDelete                        0x0000588b   Thumb Code   104  rtx_timer.o(.text)
    IsIrqMode                                0x00005a5d   Thumb Code    16  rtx_timer.o(.text)
    .text                                    0x00005a7c   Section        0  os_systick.o(.text)
    .text                                    0x00005b58   Section        0  rtx_config.o(.text)
    .text                                    0x00005b7c   Section        0  retarget_io.o(.text)
    stdout_putchar                           0x00005bc1   Thumb Code    12  retarget_io.o(.text)
    .text                                    0x00005ca4   Section        0  eventrecorder.o(.text)
    EventRecordItem                          0x00005ca5   Thumb Code   206  eventrecorder.o(.text)
    EventGetTS                               0x00005d79   Thumb Code    58  eventrecorder.o(.text)
    EventCheckFilter                         0x00005db3   Thumb Code    34  eventrecorder.o(.text)
    crc16_ccitt                              0x00005dd5   Thumb Code    66  eventrecorder.o(.text)
    GetContext                               0x0000628f   Thumb Code    10  eventrecorder.o(.text)
    .text                                    0x0000629c   Section       56  startup_armcm3.o(.text)
    .text                                    0x000062d4   Section        0  system_armcm3.o(.text)
    .text                                    0x000062fc   Section        0  memcpya.o(.text)
    .text                                    0x00006320   Section        0  memseta.o(.text)
    .text                                    0x00006344   Section        0  uidiv.o(.text)
    .text                                    0x00006370   Section       36  init.o(.text)
    .text                                    0x00006394   Section        0  __dczerorl.o(.text)
    i.__0printf$1                            0x000063d0   Section        0  printf1.o(i.__0printf$1)
    i.__scatterload_copy                     0x000063f0   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x000063fe   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00006400   Section       14  handlers.o(i.__scatterload_zeroinit)
    i._printf_core                           0x00006410   Section        0  printf1.o(i._printf_core)
    _printf_core                             0x00006411   Thumb Code   336  printf1.o(i._printf_core)
    i.fputs                                  0x00006564   Section        0  fputs.o(i.fputs)
    .constdata                               0x0000657c   Section      100  rtx_lib.o(.constdata)
    os_idle_thread_attr                      0x0000657c   Data          36  rtx_lib.o(.constdata)
    os_timer_thread_attr                     0x000065a0   Data          36  rtx_lib.o(.constdata)
    os_timer_mq_attr                         0x000065c4   Data          24  rtx_lib.o(.constdata)
    .constdata                               0x000065e0   Section       24  eventrecorder.o(.constdata)
    __tagsym$$used                           0x000065e0   Number         0  eventrecorder.o(.constdata)
    .conststrlit                             0x000065f8   Section       11  rtx_kernel.o(.conststrlit)
    .rodata                                  0x00006604   Section      104  rtx_lib.o(.rodata)
    __tagsym$$used                           0x00006604   Number         0  rtx_lib.o(.rodata)
    .bss.os                                  0x20000000   Section     4160  rtx_lib.o(.bss.os)
    os_mem                                   0x20000000   Data        4096  rtx_lib.o(.bss.os)
    os_isr_queue                             0x20001000   Data          64  rtx_lib.o(.bss.os)
    .bss.os.msgqueue.cb                      0x20001040   Section       52  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_cb                           0x20001040   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.mem                     0x20001074   Section       80  rtx_lib.o(.bss.os.msgqueue.mem)
    os_timer_mq_data                         0x20001074   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    .bss.os.thread.cb                        0x200010c4   Section      544  rtx_lib.o(.bss.os.thread.cb)
    os_thread_cb                             0x200010c4   Data         408  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_cb                        0x2000125c   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x200012a0   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.stack                     0x200012e8   Section     2912  rtx_lib.o(.bss.os.thread.stack)
    os_thread_def_stack                      0x200012e8   Data        2400  rtx_lib.o(.bss.os.thread.stack)
    os_idle_thread_stack                     0x20001c48   Data         256  rtx_lib.o(.bss.os.thread.stack)
    os_timer_thread_stack                    0x20001d48   Data         256  rtx_lib.o(.bss.os.thread.stack)
    .data                                    0x20001e48   Section       24  blinky.o(.data)
    .data                                    0x20001e60   Section        1  os_systick.o(.data)
    PendST                                   0x20001e60   Data           1  os_systick.o(.data)
    .data                                    0x20001e64   Section        4  retarget_io.o(.data)
    .data                                    0x20001e68   Section        4  system_armcm3.o(.data)
    .data                                    0x20001e6c   Section        4  stdout.o(.data)
    .data                                    0x20001e70   Section        4  stderr.o(.data)
    .data.os                                 0x20001e74   Section      164  rtx_kernel.o(.data.os)
    .data.os.thread.mpi                      0x20001f18   Section       48  rtx_lib.o(.data.os.thread.mpi)
    os_mpi_thread                            0x20001f18   Data          24  rtx_lib.o(.data.os.thread.mpi)
    os_mpi_def_stack                         0x20001f30   Data          24  rtx_lib.o(.data.os.thread.mpi)
    .bss                                     0x20001f48   Section       16  blinky.o(.bss)
    .bss.noinit                              0x20001f80   Section     1188  eventrecorder.o(.bss.noinit)
    EventBuffer                              0x20001f80   Data        1024  eventrecorder.o(.bss.noinit)
    EventFilter                              0x20002380   Data         128  eventrecorder.o(.bss.noinit)
    EventStatus                              0x20002400   Data          36  eventrecorder.o(.bss.noinit)
    STACK                                    0x20002428   Section     1024  startup_armcm3.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  blinky.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_armcm3.o(RESET)
    _printf_a                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_c                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_charcount                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_d                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_e                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_f                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_dec                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_hex                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_g                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_i                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_int_dec                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_l                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ll                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lld                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lli                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llo                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llu                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llx                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_dec                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_hex                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_oct                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ls                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_mbtowc                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_n                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_o                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_p                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_percent                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_pre_padding                      0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_s                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_str                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_signed                  0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_unsigned                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_u                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wctomb                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_x                                0x00000000   Number         0  stubs.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_End                            0x000003c0   Data           0  startup_armcm3.o(RESET)
    __Vectors_Size                           0x000003c0   Number         0  startup_armcm3.o ABSOLUTE
    __main                                   0x000003c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x000003c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x000003c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x000003c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x000003c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x000003c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x000003c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x000003d1   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x000003d1   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    __asm___13_rtx_mempool_c_7914b4c7__atomic_wr8 0x000003d5   Thumb Code    16  rtx_mempool.o(.emb_text)
    __asm___13_rtx_mempool_c_7914b4c7__atomic_set32 0x000003e5   Thumb Code    20  rtx_mempool.o(.emb_text)
    __asm___13_rtx_mempool_c_7914b4c7__atomic_clr32 0x000003f9   Thumb Code    22  rtx_mempool.o(.emb_text)
    __asm___13_rtx_mempool_c_7914b4c7__atomic_chk32_all 0x0000040f   Thumb Code    38  rtx_mempool.o(.emb_text)
    __asm___13_rtx_mempool_c_7914b4c7__atomic_chk32_any 0x00000435   Thumb Code    34  rtx_mempool.o(.emb_text)
    __asm___13_rtx_mempool_c_7914b4c7__atomic_inc32 0x00000457   Thumb Code    18  rtx_mempool.o(.emb_text)
    __asm___13_rtx_mempool_c_7914b4c7__atomic_inc16_lt 0x00000469   Thumb Code    30  rtx_mempool.o(.emb_text)
    __asm___13_rtx_mempool_c_7914b4c7__atomic_inc16_lim 0x00000487   Thumb Code    26  rtx_mempool.o(.emb_text)
    __asm___13_rtx_mempool_c_7914b4c7__atomic_dec32 0x000004a1   Thumb Code    18  rtx_mempool.o(.emb_text)
    __asm___13_rtx_mempool_c_7914b4c7__atomic_dec32_nz 0x000004b3   Thumb Code    26  rtx_mempool.o(.emb_text)
    __asm___13_rtx_mempool_c_7914b4c7__atomic_dec16_nz 0x000004cd   Thumb Code    26  rtx_mempool.o(.emb_text)
    __asm___13_rtx_mempool_c_7914b4c7__atomic_link_get 0x000004e7   Thumb Code    26  rtx_mempool.o(.emb_text)
    __asm___13_rtx_mempool_c_7914b4c7__atomic_link_put 0x00000501   Thumb Code    28  rtx_mempool.o(.emb_text)
    __asm___14_rtx_msgqueue_c_ba128ae8__atomic_wr8 0x0000051d   Thumb Code    16  rtx_msgqueue.o(.emb_text)
    __asm___14_rtx_msgqueue_c_ba128ae8__atomic_set32 0x0000052d   Thumb Code    20  rtx_msgqueue.o(.emb_text)
    __asm___14_rtx_msgqueue_c_ba128ae8__atomic_clr32 0x00000541   Thumb Code    22  rtx_msgqueue.o(.emb_text)
    __asm___14_rtx_msgqueue_c_ba128ae8__atomic_chk32_all 0x00000557   Thumb Code    38  rtx_msgqueue.o(.emb_text)
    __asm___14_rtx_msgqueue_c_ba128ae8__atomic_chk32_any 0x0000057d   Thumb Code    34  rtx_msgqueue.o(.emb_text)
    __asm___14_rtx_msgqueue_c_ba128ae8__atomic_inc32 0x0000059f   Thumb Code    18  rtx_msgqueue.o(.emb_text)
    __asm___14_rtx_msgqueue_c_ba128ae8__atomic_inc16_lt 0x000005b1   Thumb Code    30  rtx_msgqueue.o(.emb_text)
    __asm___14_rtx_msgqueue_c_ba128ae8__atomic_inc16_lim 0x000005cf   Thumb Code    26  rtx_msgqueue.o(.emb_text)
    __asm___14_rtx_msgqueue_c_ba128ae8__atomic_dec32 0x000005e9   Thumb Code    18  rtx_msgqueue.o(.emb_text)
    __asm___14_rtx_msgqueue_c_ba128ae8__atomic_dec32_nz 0x000005fb   Thumb Code    26  rtx_msgqueue.o(.emb_text)
    __asm___14_rtx_msgqueue_c_ba128ae8__atomic_dec16_nz 0x00000615   Thumb Code    26  rtx_msgqueue.o(.emb_text)
    __asm___14_rtx_msgqueue_c_ba128ae8__atomic_link_get 0x0000062f   Thumb Code    26  rtx_msgqueue.o(.emb_text)
    __asm___14_rtx_msgqueue_c_ba128ae8__atomic_link_put 0x00000649   Thumb Code    28  rtx_msgqueue.o(.emb_text)
    __asm___12_rtx_system_c_024f2f18__atomic_wr8 0x00000665   Thumb Code    16  rtx_system.o(.emb_text)
    __asm___12_rtx_system_c_024f2f18__atomic_set32 0x00000675   Thumb Code    20  rtx_system.o(.emb_text)
    __asm___12_rtx_system_c_024f2f18__atomic_clr32 0x00000689   Thumb Code    22  rtx_system.o(.emb_text)
    __asm___12_rtx_system_c_024f2f18__atomic_chk32_all 0x0000069f   Thumb Code    38  rtx_system.o(.emb_text)
    __asm___12_rtx_system_c_024f2f18__atomic_chk32_any 0x000006c5   Thumb Code    34  rtx_system.o(.emb_text)
    __asm___12_rtx_system_c_024f2f18__atomic_inc32 0x000006e7   Thumb Code    18  rtx_system.o(.emb_text)
    __asm___12_rtx_system_c_024f2f18__atomic_inc16_lt 0x000006f9   Thumb Code    30  rtx_system.o(.emb_text)
    __asm___12_rtx_system_c_024f2f18__atomic_inc16_lim 0x00000717   Thumb Code    26  rtx_system.o(.emb_text)
    __asm___12_rtx_system_c_024f2f18__atomic_dec32 0x00000731   Thumb Code    18  rtx_system.o(.emb_text)
    __asm___12_rtx_system_c_024f2f18__atomic_dec32_nz 0x00000743   Thumb Code    26  rtx_system.o(.emb_text)
    __asm___12_rtx_system_c_024f2f18__atomic_dec16_nz 0x0000075d   Thumb Code    26  rtx_system.o(.emb_text)
    __asm___12_rtx_system_c_024f2f18__atomic_link_get 0x00000777   Thumb Code    26  rtx_system.o(.emb_text)
    __asm___12_rtx_system_c_024f2f18__atomic_link_put 0x00000791   Thumb Code    28  rtx_system.o(.emb_text)
    __asm___12_rtx_thread_c_add96be5__atomic_wr8 0x000007ad   Thumb Code    16  rtx_thread.o(.emb_text)
    __asm___12_rtx_thread_c_add96be5__atomic_set32 0x000007bd   Thumb Code    20  rtx_thread.o(.emb_text)
    __asm___12_rtx_thread_c_add96be5__atomic_clr32 0x000007d1   Thumb Code    22  rtx_thread.o(.emb_text)
    __asm___12_rtx_thread_c_add96be5__atomic_chk32_all 0x000007e7   Thumb Code    38  rtx_thread.o(.emb_text)
    __asm___12_rtx_thread_c_add96be5__atomic_chk32_any 0x0000080d   Thumb Code    34  rtx_thread.o(.emb_text)
    __asm___12_rtx_thread_c_add96be5__atomic_inc32 0x0000082f   Thumb Code    18  rtx_thread.o(.emb_text)
    __asm___12_rtx_thread_c_add96be5__atomic_inc16_lt 0x00000841   Thumb Code    30  rtx_thread.o(.emb_text)
    __asm___12_rtx_thread_c_add96be5__atomic_inc16_lim 0x0000085f   Thumb Code    26  rtx_thread.o(.emb_text)
    __asm___12_rtx_thread_c_add96be5__atomic_dec32 0x00000879   Thumb Code    18  rtx_thread.o(.emb_text)
    __asm___12_rtx_thread_c_add96be5__atomic_dec32_nz 0x0000088b   Thumb Code    26  rtx_thread.o(.emb_text)
    __asm___12_rtx_thread_c_add96be5__atomic_dec16_nz 0x000008a5   Thumb Code    26  rtx_thread.o(.emb_text)
    __asm___12_rtx_thread_c_add96be5__atomic_link_get 0x000008bf   Thumb Code    26  rtx_thread.o(.emb_text)
    __asm___12_rtx_thread_c_add96be5__atomic_link_put 0x000008d9   Thumb Code    28  rtx_thread.o(.emb_text)
    __asm___15_EventRecorder_c_e8d3082c__atomic_inc8 0x000008f5   Thumb Code    18  eventrecorder.o(.emb_text)
    __asm___15_EventRecorder_c_e8d3082c__atomic_inc32 0x00000907   Thumb Code    18  eventrecorder.o(.emb_text)
    __asm___15_EventRecorder_c_e8d3082c__atomic_xch32 0x00000919   Thumb Code    16  eventrecorder.o(.emb_text)
    __asm___15_EventRecorder_c_e8d3082c__LockRecord 0x00000929   Thumb Code    34  eventrecorder.o(.emb_text)
    __asm___15_EventRecorder_c_e8d3082c__UnlockRecord 0x0000094b   Thumb Code    30  eventrecorder.o(.emb_text)
    Switch_On                                0x00000969   Thumb Code    14  blinky.o(.text)
    Switch_Off                               0x00000977   Thumb Code    14  blinky.o(.text)
    signal_func                              0x00000985   Thumb Code    62  blinky.o(.text)
    phaseA                                   0x000009c3   Thumb Code    36  blinky.o(.text)
    phaseB                                   0x000009e7   Thumb Code    36  blinky.o(.text)
    phaseC                                   0x00000a0b   Thumb Code    36  blinky.o(.text)
    phaseD                                   0x00000a2f   Thumb Code    36  blinky.o(.text)
    clock                                    0x00000a53   Thumb Code    24  blinky.o(.text)
    app_main                                 0x00000a6b   Thumb Code   102  blinky.o(.text)
    main                                     0x00000ad1   Thumb Code    36  blinky.o(.text)
    osRtxKernelPreInit                       0x00000b2d   Thumb Code     2  rtx_lib.o(.text)
    SVC_Handler                              0x00000b31   Thumb Code   108  irq_cm3.o(.text)
    PendSV_Handler                           0x00000b9d   Thumb Code    16  irq_cm3.o(.text)
    SysTick_Handler                          0x00000bad   Thumb Code    16  irq_cm3.o(.text)
    osDelay                                  0x00000c29   Thumb Code    56  rtx_delay.o(.text)
    osDelayUntil                             0x00000c61   Thumb Code    56  rtx_delay.o(.text)
    EvrRtxMemoryInit                         0x00000cb5   Thumb Code    28  rtx_evr.o(.text)
    EvrRtxMemoryAlloc                        0x00000cd1   Thumb Code    26  rtx_evr.o(.text)
    EvrRtxMemoryFree                         0x00000ceb   Thumb Code    28  rtx_evr.o(.text)
    EvrRtxMemoryBlockInit                    0x00000d07   Thumb Code    28  rtx_evr.o(.text)
    EvrRtxMemoryBlockAlloc                   0x00000d23   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxMemoryBlockFree                    0x00000d37   Thumb Code    28  rtx_evr.o(.text)
    EvrRtxKernelError                        0x00000d53   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxKernelInitialize                   0x00000d65   Thumb Code    14  rtx_evr.o(.text)
    EvrRtxKernelInitialized                  0x00000d73   Thumb Code    14  rtx_evr.o(.text)
    EvrRtxKernelGetInfo                      0x00000d81   Thumb Code    28  rtx_evr.o(.text)
    EvrRtxKernelInfoRetrieved                0x00000d9d   Thumb Code    26  rtx_evr.o(.text)
    EvrRtxKernelGetState                     0x00000db7   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxKernelStart                        0x00000dc9   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxKernelStarted                      0x00000dd9   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxKernelLock                         0x00000de9   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxKernelLocked                       0x00000df9   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxKernelUnlock                       0x00000e0b   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxKernelUnlocked                     0x00000e1b   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxKernelRestoreLock                  0x00000e2d   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxKernelLockRestored                 0x00000e3f   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxKernelSuspend                      0x00000e51   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxKernelSuspended                    0x00000e61   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxKernelResume                       0x00000e73   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxKernelResumed                      0x00000e85   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxKernelGetTickCount                 0x00000e95   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxKernelGetTickFreq                  0x00000ea7   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxKernelGetSysTimerCount             0x00000eb9   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxKernelGetSysTimerFreq              0x00000ecb   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxThreadError                        0x00000edd   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxThreadNew                          0x00000ef1   Thumb Code    38  rtx_evr.o(.text)
    EvrRtxThreadCreated                      0x00000f17   Thumb Code    36  rtx_evr.o(.text)
    EvrRtxThreadGetName                      0x00000f3b   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxThreadGetId                        0x00000f4f   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxThreadGetState                     0x00000f61   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxThreadGetStackSize                 0x00000f75   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxThreadGetStackSpace                0x00000f89   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxThreadSetPriority                  0x00000f9d   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxThreadGetPriority                  0x00000fb1   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxThreadYield                        0x00000fc5   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadSuspend                      0x00000fd5   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxThreadSuspended                    0x00000fe7   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxThreadResume                       0x00000ff9   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxThreadResumed                      0x0000100b   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxThreadDetach                       0x0000101d   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxThreadDetached                     0x0000102f   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxThreadJoin                         0x00001041   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxThreadJoinPending                  0x00001053   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxThreadJoined                       0x00001065   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxThreadBlocked                      0x00001077   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxThreadUnblocked                    0x0000108b   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxThreadPreempted                    0x0000109f   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxThreadSwitched                     0x000010b1   Thumb Code    44  rtx_evr.o(.text)
    EvrRtxThreadExit                         0x000010dd   Thumb Code    14  rtx_evr.o(.text)
    EvrRtxThreadTerminate                    0x000010eb   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxThreadDestroyed                    0x000010fd   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadGetCount                     0x0000110d   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxThreadEnumerate                    0x0000111f   Thumb Code    28  rtx_evr.o(.text)
    EvrRtxThreadFlagsSet                     0x0000113b   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxThreadFlagsSetDone                 0x0000114f   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxThreadFlagsClear                   0x00001163   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxThreadFlagsClearDone               0x00001175   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxThreadFlagsGet                     0x00001187   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxThreadFlagsWait                    0x00001199   Thumb Code    28  rtx_evr.o(.text)
    EvrRtxThreadFlagsWaitPending             0x000011b5   Thumb Code    28  rtx_evr.o(.text)
    EvrRtxThreadFlagsWaitTimeout             0x000011d1   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxThreadFlagsWaitCompleted           0x000011e1   Thumb Code    28  rtx_evr.o(.text)
    EvrRtxThreadFlagsWaitNotCompleted        0x000011fd   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxThreadDelay                        0x00001211   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxThreadDelayUntil                   0x00001223   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxThreadDelayCompleted               0x00001235   Thumb Code    16  rtx_evr.o(.text)
    EvrRtxTimerError                         0x00001245   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxTimerCallback                      0x00001259   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxTimerNew                           0x0000126d   Thumb Code    40  rtx_evr.o(.text)
    EvrRtxTimerCreated                       0x00001295   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxTimerGetName                       0x000012a9   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxTimerStart                         0x000012bd   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxTimerStarted                       0x000012d1   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxTimerStop                          0x000012e3   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxTimerStopped                       0x000012f5   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxTimerIsRunning                     0x00001307   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxTimerDelete                        0x0000131b   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxTimerDestroyed                     0x0000132d   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxEventFlagsError                    0x0000133f   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxEventFlagsNew                      0x00001353   Thumb Code    30  rtx_evr.o(.text)
    EvrRtxEventFlagsCreated                  0x00001371   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxEventFlagsGetName                  0x00001383   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxEventFlagsSet                      0x00001397   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxEventFlagsSetDone                  0x000013ab   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxEventFlagsClear                    0x000013bf   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxEventFlagsClearDone                0x000013d3   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxEventFlagsGet                      0x000013e7   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxEventFlagsWait                     0x000013fb   Thumb Code    28  rtx_evr.o(.text)
    EvrRtxEventFlagsWaitPending              0x00001417   Thumb Code    28  rtx_evr.o(.text)
    EvrRtxEventFlagsWaitTimeout              0x00001433   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxEventFlagsWaitCompleted            0x00001445   Thumb Code    28  rtx_evr.o(.text)
    EvrRtxEventFlagsWaitNotCompleted         0x00001461   Thumb Code    28  rtx_evr.o(.text)
    EvrRtxEventFlagsDelete                   0x0000147d   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxEventFlagsDestroyed                0x0000148f   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxMutexError                         0x000014a1   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxMutexNew                           0x000014b5   Thumb Code    56  rtx_evr.o(.text)
    EvrRtxMutexCreated                       0x000014ed   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxMutexGetName                       0x000014ff   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxMutexAcquire                       0x00001511   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxMutexAcquirePending                0x00001525   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxMutexAcquireTimeout                0x00001539   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxMutexAcquired                      0x0000154b   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxMutexNotAcquired                   0x0000155f   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxMutexRelease                       0x00001571   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxMutexReleased                      0x00001583   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxMutexGetOwner                      0x00001597   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxMutexDelete                        0x000015ab   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxMutexDestroyed                     0x000015bd   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxSemaphoreError                     0x000015cf   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxSemaphoreNew                       0x000015e3   Thumb Code    40  rtx_evr.o(.text)
    EvrRtxSemaphoreCreated                   0x0000160b   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxSemaphoreGetName                   0x0000161d   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxSemaphoreAcquire                   0x0000162f   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxSemaphoreAcquirePending            0x00001643   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxSemaphoreAcquireTimeout            0x00001657   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxSemaphoreAcquired                  0x00001669   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxSemaphoreNotAcquired               0x0000167d   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxSemaphoreRelease                   0x0000168f   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxSemaphoreReleased                  0x000016a1   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxSemaphoreGetCount                  0x000016b5   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxSemaphoreDelete                    0x000016c9   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxSemaphoreDestroyed                 0x000016db   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxMemoryPoolError                    0x000016ed   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxMemoryPoolNew                      0x00001701   Thumb Code    40  rtx_evr.o(.text)
    EvrRtxMemoryPoolCreated                  0x00001729   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxMemoryPoolGetName                  0x0000173b   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxMemoryPoolAlloc                    0x0000174d   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxMemoryPoolAllocPending             0x00001761   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxMemoryPoolAllocTimeout             0x00001775   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxMemoryPoolAllocated                0x00001787   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxMemoryPoolAllocFailed              0x0000179b   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxMemoryPoolFree                     0x000017ad   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxMemoryPoolDeallocated              0x000017c1   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxMemoryPoolFreeFailed               0x000017d5   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxMemoryPoolGetCapacity              0x000017e9   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxMemoryPoolGetBlockSize             0x000017fd   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxMemoryPoolGetCount                 0x00001811   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxMemoryPoolGetSpace                 0x00001825   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxMemoryPoolDelete                   0x00001839   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxMemoryPoolDestroyed                0x0000184b   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxMessageQueueError                  0x0000185d   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxMessageQueueNew                    0x00001871   Thumb Code    40  rtx_evr.o(.text)
    EvrRtxMessageQueueCreated                0x00001899   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxMessageQueueGetName                0x000018ab   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxMessageQueuePut                    0x000018bd   Thumb Code    72  rtx_evr.o(.text)
    EvrRtxMessageQueuePutPending             0x00001905   Thumb Code    26  rtx_evr.o(.text)
    EvrRtxMessageQueuePutTimeout             0x0000191f   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxMessageQueueInsertPending          0x00001931   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxMessageQueueInserted               0x00001945   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxMessageQueueNotInserted            0x00001959   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxMessageQueueGet                    0x0000196d   Thumb Code    26  rtx_evr.o(.text)
    EvrRtxMessageQueueGetPending             0x00001987   Thumb Code    28  rtx_evr.o(.text)
    EvrRtxMessageQueueGetTimeout             0x000019a3   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxMessageQueueRetrieved              0x000019b5   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxMessageQueueNotRetrieved           0x000019c9   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxMessageQueueGetCapacity            0x000019dd   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxMessageQueueGetMsgSize             0x000019f1   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxMessageQueueGetCount               0x00001a05   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxMessageQueueGetSpace               0x00001a19   Thumb Code    20  rtx_evr.o(.text)
    EvrRtxMessageQueueReset                  0x00001a2d   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxMessageQueueResetDone              0x00001a3f   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxMessageQueueDelete                 0x00001a51   Thumb Code    18  rtx_evr.o(.text)
    EvrRtxMessageQueueDestroyed              0x00001a63   Thumb Code    18  rtx_evr.o(.text)
    osKernelInitialize                       0x000020ed   Thumb Code    52  rtx_kernel.o(.text)
    osKernelGetInfo                          0x00002121   Thumb Code    76  rtx_kernel.o(.text)
    osKernelGetState                         0x0000216d   Thumb Code    44  rtx_kernel.o(.text)
    osKernelStart                            0x00002199   Thumb Code    48  rtx_kernel.o(.text)
    osKernelLock                             0x000021c9   Thumb Code    48  rtx_kernel.o(.text)
    osKernelUnlock                           0x000021f9   Thumb Code    48  rtx_kernel.o(.text)
    osKernelRestoreLock                      0x00002229   Thumb Code    54  rtx_kernel.o(.text)
    osKernelSuspend                          0x0000225f   Thumb Code    86  rtx_kernel.o(.text)
    osKernelResume                           0x000022b5   Thumb Code    48  rtx_kernel.o(.text)
    osKernelGetTickCount                     0x000022e5   Thumb Code    38  rtx_kernel.o(.text)
    osKernelGetTickFreq                      0x0000230b   Thumb Code    38  rtx_kernel.o(.text)
    osKernelGetSysTimerCount                 0x00002331   Thumb Code    38  rtx_kernel.o(.text)
    osKernelGetSysTimerFreq                  0x00002357   Thumb Code    38  rtx_kernel.o(.text)
    osRtxMemoryInit                          0x000023b1   Thumb Code   106  rtx_memory.o(.text)
    osRtxMemoryAlloc                         0x0000241b   Thumb Code   238  rtx_memory.o(.text)
    osRtxMemoryFree                          0x00002509   Thumb Code   124  rtx_memory.o(.text)
    osRtxMemoryPoolInit                      0x000025a9   Thumb Code    88  rtx_mempool.o(.text)
    osRtxMemoryPoolAlloc                     0x00002601   Thumb Code    48  rtx_mempool.o(.text)
    osRtxMemoryPoolFree                      0x00002631   Thumb Code    68  rtx_mempool.o(.text)
    osMemoryPoolNew                          0x00002a95   Thumb Code    70  rtx_mempool.o(.text)
    osMemoryPoolGetName                      0x00002adb   Thumb Code    46  rtx_mempool.o(.text)
    osMemoryPoolAlloc                        0x00002b09   Thumb Code   144  rtx_mempool.o(.text)
    osMemoryPoolFree                         0x00002b99   Thumb Code    58  rtx_mempool.o(.text)
    osMemoryPoolGetCapacity                  0x00002bd3   Thumb Code    44  rtx_mempool.o(.text)
    osMemoryPoolGetBlockSize                 0x00002bff   Thumb Code    44  rtx_mempool.o(.text)
    osMemoryPoolGetCount                     0x00002c2b   Thumb Code    44  rtx_mempool.o(.text)
    osMemoryPoolGetSpace                     0x00002c57   Thumb Code    44  rtx_mempool.o(.text)
    osMemoryPoolDelete                       0x00002c83   Thumb Code    56  rtx_mempool.o(.text)
    osMessageQueueNew                        0x00003547   Thumb Code    70  rtx_msgqueue.o(.text)
    osMessageQueueGetName                    0x0000358d   Thumb Code    46  rtx_msgqueue.o(.text)
    osMessageQueuePut                        0x000035bb   Thumb Code    78  rtx_msgqueue.o(.text)
    osMessageQueueGet                        0x00003609   Thumb Code    78  rtx_msgqueue.o(.text)
    osMessageQueueGetCapacity                0x00003657   Thumb Code    44  rtx_msgqueue.o(.text)
    osMessageQueueGetMsgSize                 0x00003683   Thumb Code    44  rtx_msgqueue.o(.text)
    osMessageQueueGetCount                   0x000036af   Thumb Code    44  rtx_msgqueue.o(.text)
    osMessageQueueGetSpace                   0x000036db   Thumb Code    44  rtx_msgqueue.o(.text)
    osMessageQueueReset                      0x00003707   Thumb Code    56  rtx_msgqueue.o(.text)
    osMessageQueueDelete                     0x0000373f   Thumb Code    56  rtx_msgqueue.o(.text)
    osRtxMutexOwnerRelease                   0x000038d5   Thumb Code    94  rtx_mutex.o(.text)
    osMutexNew                               0x00003d31   Thumb Code    64  rtx_mutex.o(.text)
    osMutexGetName                           0x00003d71   Thumb Code    46  rtx_mutex.o(.text)
    osMutexAcquire                           0x00003d9f   Thumb Code    62  rtx_mutex.o(.text)
    osMutexRelease                           0x00003ddd   Thumb Code    56  rtx_mutex.o(.text)
    osMutexGetOwner                          0x00003e15   Thumb Code    46  rtx_mutex.o(.text)
    osMutexDelete                            0x00003e43   Thumb Code    56  rtx_mutex.o(.text)
    osRtxTick_Handler                        0x00003f07   Thumb Code   154  rtx_system.o(.text)
    osRtxPendSV_Handler                      0x00003fa1   Thumb Code   126  rtx_system.o(.text)
    osRtxPostProcess                         0x0000401f   Thumb Code    50  rtx_system.o(.text)
    osRtxThreadListPut                       0x000040f3   Thumb Code    50  rtx_thread.o(.text)
    osRtxThreadListGet                       0x00004125   Thumb Code    28  rtx_thread.o(.text)
    osRtxThreadListRemove                    0x00004153   Thumb Code    26  rtx_thread.o(.text)
    osRtxThreadListSort                      0x0000416d   Thumb Code    42  rtx_thread.o(.text)
    osRtxThreadReadyPut                      0x000041b7   Thumb Code    18  rtx_thread.o(.text)
    osRtxThreadRegPtr                        0x000042a9   Thumb Code    14  rtx_thread.o(.text)
    osRtxThreadDelayTick                     0x000042b7   Thumb Code   220  rtx_thread.o(.text)
    osRtxThreadStackCheck                    0x000043cd   Thumb Code    38  rtx_thread.o(.text)
    osRtxThreadSwitch                        0x000043f3   Thumb Code    26  rtx_thread.o(.text)
    osRtxThreadDispatch                      0x0000440d   Thumb Code   108  rtx_thread.o(.text)
    osRtxThreadWaitExit                      0x00004479   Thumb Code    54  rtx_thread.o(.text)
    osRtxThreadWaitEnter                     0x000044af   Thumb Code    78  rtx_thread.o(.text)
    osThreadExit                             0x0000462f   Thumb Code    28  rtx_thread.o(.text)
    osRtxThreadStartup                       0x00005019   Thumb Code    78  rtx_thread.o(.text)
    osThreadNew                              0x00005067   Thumb Code    70  rtx_thread.o(.text)
    osThreadGetName                          0x000050ad   Thumb Code    46  rtx_thread.o(.text)
    osThreadGetId                            0x000050db   Thumb Code    38  rtx_thread.o(.text)
    osThreadGetState                         0x00005101   Thumb Code    50  rtx_thread.o(.text)
    osThreadGetStackSize                     0x00005133   Thumb Code    46  rtx_thread.o(.text)
    osThreadGetStackSpace                    0x00005161   Thumb Code    46  rtx_thread.o(.text)
    osThreadSetPriority                      0x0000518f   Thumb Code    62  rtx_thread.o(.text)
    osThreadGetPriority                      0x000051cd   Thumb Code    50  rtx_thread.o(.text)
    osThreadYield                            0x000051ff   Thumb Code    50  rtx_thread.o(.text)
    osThreadSuspend                          0x00005231   Thumb Code    56  rtx_thread.o(.text)
    osThreadResume                           0x00005269   Thumb Code    56  rtx_thread.o(.text)
    osThreadDetach                           0x000052a1   Thumb Code    56  rtx_thread.o(.text)
    osThreadJoin                             0x000052d9   Thumb Code    56  rtx_thread.o(.text)
    osThreadTerminate                        0x00005311   Thumb Code    56  rtx_thread.o(.text)
    osThreadGetCount                         0x00005349   Thumb Code    40  rtx_thread.o(.text)
    osThreadEnumerate                        0x00005371   Thumb Code    52  rtx_thread.o(.text)
    osThreadFlagsSet                         0x000053a5   Thumb Code    58  rtx_thread.o(.text)
    osThreadFlagsClear                       0x000053df   Thumb Code   142  rtx_thread.o(.text)
    osThreadFlagsGet                         0x0000546d   Thumb Code    40  rtx_thread.o(.text)
    osThreadFlagsWait                        0x00005495   Thumb Code    72  rtx_thread.o(.text)
    osRtxTimerThread                         0x0000565b   Thumb Code    76  rtx_timer.o(.text)
    osTimerNew                               0x000058f3   Thumb Code    76  rtx_timer.o(.text)
    osTimerGetName                           0x0000593f   Thumb Code    66  rtx_timer.o(.text)
    osTimerStart                             0x00005981   Thumb Code    62  rtx_timer.o(.text)
    osTimerStop                              0x000059bf   Thumb Code    56  rtx_timer.o(.text)
    osTimerIsRunning                         0x000059f7   Thumb Code    46  rtx_timer.o(.text)
    osTimerDelete                            0x00005a25   Thumb Code    56  rtx_timer.o(.text)
    OS_Tick_Setup                            0x00005a7d   Thumb Code    66  os_systick.o(.text)
    OS_Tick_Enable                           0x00005abf   Thumb Code    40  os_systick.o(.text)
    OS_Tick_Disable                          0x00005ae7   Thumb Code    46  os_systick.o(.text)
    OS_Tick_AcknowledgeIRQ                   0x00005b15   Thumb Code     8  os_systick.o(.text)
    OS_Tick_GetIRQn                          0x00005b1d   Thumb Code     6  os_systick.o(.text)
    OS_Tick_GetClock                         0x00005b23   Thumb Code     6  os_systick.o(.text)
    OS_Tick_GetInterval                      0x00005b29   Thumb Code    10  os_systick.o(.text)
    OS_Tick_GetCount                         0x00005b33   Thumb Code    12  os_systick.o(.text)
    OS_Tick_GetOverflow                      0x00005b3f   Thumb Code    12  os_systick.o(.text)
    osRtxIdleThread                          0x00005b59   Thumb Code     4  rtx_config.o(.text)
    osRtxErrorNotify                         0x00005b5d   Thumb Code    32  rtx_config.o(.text)
    ITM_SendChar                             0x00005b7d   Thumb Code    42  retarget_io.o(.text)
    ITM_ReceiveChar                          0x00005ba7   Thumb Code    26  retarget_io.o(.text)
    fputc                                    0x00005bcd   Thumb Code    26  retarget_io.o(.text)
    fgetc                                    0x00005be7   Thumb Code     8  retarget_io.o(.text)
    __backspace                              0x00005bef   Thumb Code     8  retarget_io.o(.text)
    abort                                    0x00005bf7   Thumb Code     4  retarget_io.o(.text)
    __aeabi_assert                           0x00005bfb   Thumb Code   110  retarget_io.o(.text)
    EventRecorderTimerGetCount               0x00005d73   Thumb Code     6  eventrecorder.o(.text)
    EventRecorderTimerSetup                  0x00005e17   Thumb Code    28  eventrecorder.o(.text)
    EventRecorderTimerGetFreq                0x00005e33   Thumb Code     6  eventrecorder.o(.text)
    EventRecorderStart                       0x00005e39   Thumb Code    44  eventrecorder.o(.text)
    EventRecorderEnable                      0x00005e65   Thumb Code    88  eventrecorder.o(.text)
    EventRecorderInitialize                  0x00005ebd   Thumb Code   300  eventrecorder.o(.text)
    EventRecorderDisable                     0x00005fe9   Thumb Code    88  eventrecorder.o(.text)
    EventRecorderStop                        0x00006041   Thumb Code    46  eventrecorder.o(.text)
    EventRecorderClockUpdate                 0x0000606f   Thumb Code    78  eventrecorder.o(.text)
    EventRecordData                          0x000060bd   Thumb Code   278  eventrecorder.o(.text)
    EventRecord2                             0x000061d3   Thumb Code    70  eventrecorder.o(.text)
    EventRecord4                             0x00006219   Thumb Code   118  eventrecorder.o(.text)
    Reset_Handler                            0x0000629d   Thumb Code     8  startup_armcm3.o(.text)
    NMI_Handler                              0x000062a5   Thumb Code     2  startup_armcm3.o(.text)
    HardFault_Handler                        0x000062a7   Thumb Code     2  startup_armcm3.o(.text)
    MemManage_Handler                        0x000062a9   Thumb Code     2  startup_armcm3.o(.text)
    BusFault_Handler                         0x000062ab   Thumb Code     2  startup_armcm3.o(.text)
    UsageFault_Handler                       0x000062ad   Thumb Code     2  startup_armcm3.o(.text)
    DebugMon_Handler                         0x000062b1   Thumb Code     2  startup_armcm3.o(.text)
    Interrupt0_Handler                       0x000062b7   Thumb Code     2  startup_armcm3.o(.text)
    Interrupt1_Handler                       0x000062b9   Thumb Code     2  startup_armcm3.o(.text)
    Interrupt2_Handler                       0x000062bb   Thumb Code     2  startup_armcm3.o(.text)
    Interrupt3_Handler                       0x000062bd   Thumb Code     2  startup_armcm3.o(.text)
    Interrupt4_Handler                       0x000062bf   Thumb Code     2  startup_armcm3.o(.text)
    Interrupt5_Handler                       0x000062c1   Thumb Code     2  startup_armcm3.o(.text)
    Interrupt6_Handler                       0x000062c3   Thumb Code     2  startup_armcm3.o(.text)
    Interrupt7_Handler                       0x000062c5   Thumb Code     2  startup_armcm3.o(.text)
    Interrupt8_Handler                       0x000062c7   Thumb Code     2  startup_armcm3.o(.text)
    Interrupt9_Handler                       0x000062c9   Thumb Code     2  startup_armcm3.o(.text)
    SystemCoreClockUpdate                    0x000062d5   Thumb Code     8  system_armcm3.o(.text)
    SystemInit                               0x000062dd   Thumb Code    14  system_armcm3.o(.text)
    __aeabi_memcpy                           0x000062fd   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x000062fd   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x000062fd   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x00006321   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x00006321   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x00006321   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x0000632f   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x0000632f   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x0000632f   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x00006333   Thumb Code    18  memseta.o(.text)
    __aeabi_uidiv                            0x00006345   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x00006345   Thumb Code    44  uidiv.o(.text)
    __scatterload                            0x00006371   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x00006371   Thumb Code     0  init.o(.text)
    __decompress                             0x00006395   Thumb Code     0  __dczerorl.o(.text)
    __decompress0                            0x00006395   Thumb Code    58  __dczerorl.o(.text)
    __0printf$1                              0x000063d1   Thumb Code    22  printf1.o(i.__0printf$1)
    __1printf$1                              0x000063d1   Thumb Code     0  printf1.o(i.__0printf$1)
    __2printf                                0x000063d1   Thumb Code     0  printf1.o(i.__0printf$1)
    __scatterload_copy                       0x000063f1   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x000063ff   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00006401   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    fputs                                    0x00006565   Thumb Code    24  fputs.o(i.fputs)
    osRtxUserSVC                             0x000065dc   Data           4  rtx_lib.o(.constdata)
    EventRecorderInfo                        0x000065e0   Data          24  eventrecorder.o(.constdata)
    osRtxConfig                              0x00006604   Data         104  rtx_lib.o(.rodata)
    Region$$Table$$Base                      0x0000666c   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x0000668c   Number         0  anon$$obj.o(Region$$Table)
    .bss.os.msgqueue.cb$$Base                0x20001040   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x20001074   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x200010c4   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x200012e4   Number         0  rtx_lib.o(.bss.os.thread.cb)
    tid_phaseA                               0x20001e48   Data           4  blinky.o(.data)
    tid_phaseB                               0x20001e4c   Data           4  blinky.o(.data)
    tid_phaseC                               0x20001e50   Data           4  blinky.o(.data)
    tid_phaseD                               0x20001e54   Data           4  blinky.o(.data)
    tid_clock                                0x20001e58   Data           4  blinky.o(.data)
    phases_mut_id                            0x20001e5c   Data           4  blinky.o(.data)
    ITM_RxBuffer                             0x20001e64   Data           4  retarget_io.o(.data)
    SystemCoreClock                          0x20001e68   Data           4  system_armcm3.o(.data)
    __stdout                                 0x20001e6c   Data           4  stdout.o(.data)
    __stderr                                 0x20001e70   Data           4  stderr.o(.data)
    osRtxInfo                                0x20001e74   Data         164  rtx_kernel.o(.data.os)
    g_phases                                 0x20001f48   Data          16  blinky.o(.bss)
    __stack_limit                            0x20002428   Data           0  startup_armcm3.o(STACK)
    __initial_sp                             0x20002828   Data           0  startup_armcm3.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000003c1

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x000085d4, Max: 0x00040000, ABSOLUTE, COMPRESSED[0x000066f0])

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x0000668c, Max: 0x00040000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000003c0   Data   RO          669    RESET               startup_armcm3.o
    0x000003c0   0x000003c0   0x00000000   Code   RO          705  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x000003c0   0x000003c0   0x00000004   Code   RO          981    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x000003c4   0x000003c4   0x00000004   Code   RO          984    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x000003c8   0x000003c8   0x00000000   Code   RO          986    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x000003c8   0x000003c8   0x00000000   Code   RO          988    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x000003c8   0x000003c8   0x00000008   Code   RO          989    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x000003d0   0x000003d0   0x00000000   Code   RO          991    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x000003d0   0x000003d0   0x00000000   Code   RO          993    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x000003d0   0x000003d0   0x00000004   Code   RO          982    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x000003d4   0x000003d4   0x00000148   Code   RO          330    .emb_text           rtx_mempool.o
    0x0000051c   0x0000051c   0x00000148   Code   RO          361    .emb_text           rtx_msgqueue.o
    0x00000664   0x00000664   0x00000148   Code   RO          457    .emb_text           rtx_system.o
    0x000007ac   0x000007ac   0x00000148   Code   RO          491    .emb_text           rtx_thread.o
    0x000008f4   0x000008f4   0x00000074   Code   RO          635    .emb_text           eventrecorder.o
    0x00000968   0x00000968   0x000001c4   Code   RO            4    .text               blinky.o
    0x00000b2c   0x00000b2c   0x00000002   Code   RO           73    .text               rtx_lib.o
    0x00000b2e   0x00000b2e   0x00000002   PAD
    0x00000b30   0x00000b30   0x00000094   Code   RO          129    .text               irq_cm3.o
    0x00000bc4   0x00000bc4   0x000000f0   Code   RO          137    .text               rtx_delay.o
    0x00000cb4   0x00000cb4   0x00000dc8   Code   RO          226    .text               rtx_evr.o
    0x00001a7c   0x00001a7c   0x00000934   Code   RO          251    .text               rtx_kernel.o
    0x000023b0   0x000023b0   0x000001de   Code   RO          300    .text               rtx_memory.o
    0x0000258e   0x0000258e   0x00000002   PAD
    0x00002590   0x00002590   0x000007b0   Code   RO          331    .text               rtx_mempool.o
    0x00002d40   0x00002d40   0x00000b7c   Code   RO          362    .text               rtx_msgqueue.o
    0x000038bc   0x000038bc   0x000005e4   Code   RO          396    .text               rtx_mutex.o
    0x00003ea0   0x00003ea0   0x000001b8   Code   RO          458    .text               rtx_system.o
    0x00004058   0x00004058   0x0000151c   Code   RO          492    .text               rtx_thread.o
    0x00005574   0x00005574   0x00000508   Code   RO          526    .text               rtx_timer.o
    0x00005a7c   0x00005a7c   0x000000dc   Code   RO          556    .text               os_systick.o
    0x00005b58   0x00005b58   0x00000024   Code   RO          582    .text               rtx_config.o
    0x00005b7c   0x00005b7c   0x00000128   Code   RO          603    .text               retarget_io.o
    0x00005ca4   0x00005ca4   0x000005f8   Code   RO          636    .text               eventrecorder.o
    0x0000629c   0x0000629c   0x00000038   Code   RO          670    .text               startup_armcm3.o
    0x000062d4   0x000062d4   0x00000028   Code   RO          677    .text               system_armcm3.o
    0x000062fc   0x000062fc   0x00000024   Code   RO          714    .text               mc_w.l(memcpya.o)
    0x00006320   0x00006320   0x00000024   Code   RO          716    .text               mc_w.l(memseta.o)
    0x00006344   0x00006344   0x0000002c   Code   RO          995    .text               mc_w.l(uidiv.o)
    0x00006370   0x00006370   0x00000024   Code   RO         1010    .text               mc_w.l(init.o)
    0x00006394   0x00006394   0x0000003a   Code   RO         1028    .text               mc_w.l(__dczerorl.o)
    0x000063ce   0x000063ce   0x00000002   PAD
    0x000063d0   0x000063d0   0x00000020   Code   RO          765    i.__0printf$1       mc_w.l(printf1.o)
    0x000063f0   0x000063f0   0x0000000e   Code   RO         1022    i.__scatterload_copy  mc_w.l(handlers.o)
    0x000063fe   0x000063fe   0x00000002   Code   RO         1023    i.__scatterload_null  mc_w.l(handlers.o)
    0x00006400   0x00006400   0x0000000e   Code   RO         1024    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x0000640e   0x0000640e   0x00000002   PAD
    0x00006410   0x00006410   0x00000154   Code   RO          772    i._printf_core      mc_w.l(printf1.o)
    0x00006564   0x00006564   0x00000018   Code   RO          708    i.fputs             mc_w.l(fputs.o)
    0x0000657c   0x0000657c   0x00000064   Data   RO           79    .constdata          rtx_lib.o
    0x000065e0   0x000065e0   0x00000018   Data   RO          638    .constdata          eventrecorder.o
    0x000065f8   0x000065f8   0x0000000b   Data   RO          252    .conststrlit        rtx_kernel.o
    0x00006603   0x00006603   0x00000001   PAD
    0x00006604   0x00006604   0x00000068   Data   RO           82    .rodata             rtx_lib.o
    0x0000666c   0x0000666c   0x00000020   Data   RO         1020    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x0000668c, Size: 0x00002828, Max: 0x00020000, ABSOLUTE, COMPRESSED[0x00000064])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00001040   Data   RW           74    .bss.os             rtx_lib.o
    0x20001040   COMPRESSED   0x00000034   Data   RW           75    .bss.os.msgqueue.cb  rtx_lib.o
    0x20001074   COMPRESSED   0x00000050   Data   RW           76    .bss.os.msgqueue.mem  rtx_lib.o
    0x200010c4   COMPRESSED   0x00000220   Data   RW           77    .bss.os.thread.cb   rtx_lib.o
    0x200012e4   COMPRESSED   0x00000004   PAD
    0x200012e8   COMPRESSED   0x00000b60   Data   RW           78    .bss.os.thread.stack  rtx_lib.o
    0x20001e48   COMPRESSED   0x00000018   Data   RW            6    .data               blinky.o
    0x20001e60   COMPRESSED   0x00000001   Data   RW          557    .data               os_systick.o
    0x20001e61   COMPRESSED   0x00000003   PAD
    0x20001e64   COMPRESSED   0x00000004   Data   RW          604    .data               retarget_io.o
    0x20001e68   COMPRESSED   0x00000004   Data   RW          678    .data               system_armcm3.o
    0x20001e6c   COMPRESSED   0x00000004   Data   RW          712    .data               mc_w.l(stdout.o)
    0x20001e70   COMPRESSED   0x00000004   Data   RW          713    .data               mc_w.l(stderr.o)
    0x20001e74   COMPRESSED   0x000000a4   Data   RW          253    .data.os            rtx_kernel.o
    0x20001f18   COMPRESSED   0x00000030   Data   RW           81    .data.os.thread.mpi  rtx_lib.o
    0x20001f48        -       0x00000010   Zero   RW            5    .bss                blinky.o
    0x20001f58   COMPRESSED   0x00000028   PAD
    0x20001f80        -       0x000004a4   Zero   RW          637    .bss.noinit         eventrecorder.o
    0x20002424   COMPRESSED   0x00000004   PAD
    0x20002428        -       0x00000400   Zero   RW          667    STACK               startup_armcm3.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       452         56          0         24         16      10654   blinky.o
      1644         42         24          0       1188      14736   eventrecorder.o
       148         10          0          0          0        464   irq_cm3.o
       220         14          0          1          0       1812   os_systick.o
       296         60          0          4          0       4171   retarget_io.o
        36          6          0          0          0        635   rtx_config.o
       240         12          0          0          0      15106   rtx_delay.o
      3528        106          0          0          0      51201   rtx_evr.o
      2356         98         11        164          0      24417   rtx_kernel.o
         2          0        204       7796          0       8808   rtx_lib.o
       478          0          0          0          0       2731   rtx_memory.o
      2296         46          0          0          0      14456   rtx_mempool.o
      3268         54          0          0          0      20752   rtx_msgqueue.o
      1508         32          0          0          0       8859   rtx_mutex.o
       768         16          0          0          0       7561   rtx_system.o
      5732        148          0          0          0      30425   rtx_thread.o
      1288         36          0          0          0       7077   rtx_timer.o
        56         10        960          0       1024       1152   startup_armcm3.o
        40         18          0          4          0        753   system_armcm3.o

    ----------------------------------------------------------------------
     24360        764       1232       8000       2272     225770   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         4          0          1          7         44          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        58          0          0          0          0          0   __dczerorl.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        24          0          0          0          0         80   fputs.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
        36          0          0          0          0         68   memcpya.o
        36          0          0          0          0        108   memseta.o
       372         14          0          0          0        184   printf1.o
         0          0          0          4          0          0   stderr.o
         0          0          0          4          0          0   stdout.o
        44          0          0          0          0         80   uidiv.o

    ----------------------------------------------------------------------
       660         30          0          8          0        588   Library Totals
         4          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       656         30          0          8          0        588   mc_w.l

    ----------------------------------------------------------------------
       660         30          0          8          0        588   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     25020        794       1232       8008       2272     225238   Grand Totals
     25020        794       1232        100       2272     225238   ELF Image Totals (compressed)
     25020        794       1232        100          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                26252 (  25.64kB)
    Total RW  Size (RW Data + ZI Data)             10280 (  10.04kB)
    Total ROM Size (Code + RO Data + RW Data)      26352 (  25.73kB)

==============================================================================

